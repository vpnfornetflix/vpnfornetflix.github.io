<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnfornetflix.github.io/news/article-82637.htm" />
    <meta name="theme-color" content="#c70039">
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>在Spring配置文件中自定义标签如何实现</title>
        <meta name="description" content="Spring 配置文件自定义标签的前置条件 在上一篇文章https://www.cnblogs.com/redwinter/p/16165274.htmlSpring BeanFactory的创建过程" />
        <link rel="icon" href="/assets/website/img/clashxpro/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN For Netflix 订阅链接节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnfornetflix.github.io/news/article-82637.htm" />
    <meta property="og:site_name" content="VPN For Netflix 订阅链接节点官网" />
    <meta property="og:title" content="在Spring配置文件中自定义标签如何实现" />
    <meta property="og:image" content="https://vpnfornetflix.github.io/uploads/20241107-1/692d552febec016a5fc0f2c8a5c7d0f5.webp" />
        <meta property="og:release_date" content="2025-03-27T08:15:27" />
    <meta property="og:updated_time" content="2025-03-27T08:15:27" />
        <meta property="og:description" content="Spring 配置文件自定义标签的前置条件 在上一篇文章https://www.cnblogs.com/redwinter/p/16165274.htmlSpring BeanFactory的创建过程" />
        
    <!-- Start Stylesheet -->
    <link href="/assets/website/css/clashxpro/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/bootsnav.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/style.css" rel="stylesheet">
    <link href="/assets/website/css/clashxpro/responsive.css" rel="stylesheet" />
    <!-- Google Web Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="在Spring配置文件中自定义标签如何实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FE8EJMMK0B"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FE8EJMMK0B');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Header -->
    <header id="home">
        <!-- Start Navigation -->
        <nav class="navbar navbar-default navbar-fixed white no-background bootsnav">
            <div class="container">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu"> <i class="fa fa-bars"></i> </button>
                    <a class="navbar-brand" href="/">
                                                <span>VPN For Netflix</span>
                                            </a>
                </div>
                <!-- End Header Navigation -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="#" data-out="#">
                                                <li><a href="/">首页</a></li>
                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                <li><a href="/news/">新闻资讯</a></li>
                                                <li><a href="/client.htm">客户端</a></li>
                                            </ul>
                </div>
                <!-- /.navbar-collapse -->
            </div>
        </nav>
        <!-- End Navigation -->
    </header>
    <!-- End Header -->
    <!-- Start Page Heading -->
    <div class="utf-page-heading shadow dark bg-fixed text-light" style="background-image: url(assets/img/banner/breadcrum.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>在Spring配置文件中自定义标签如何实现</h1>
                    <div class="utf-breadcrumb-items">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Heading -->
    <!-- Start Portfolio -->
    <div id="portfolio" class="utf-portfolio-area-item default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<h3 id="spring-配置文件自定义标签的前置条件">Spring 配置文件自定义标签的前置条件</h3> <p>在上一篇文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/redwinter/p/16165274.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/redwinter/p/16165274.html</a><code>Spring BeanFactory</code>的创建过程中了解了<code>BeanDefinition</code>的加载和<code>BeanFactory</code>的创建，并且提到了<code>Spring</code>留了一个扩展点就是用户可以自定义标签进行解析<code>BeanDefinition</code>。</p> <p>基于<code>Spring</code>源码在处理定制的标签时是通过定制的命名空间处理器和<code>xsd</code>文件进行解析的，在<code>spring</code>的<code>classpath</code>下的<code>META-INF/spring.schemas</code>和<code>META-INF/spring.handlers</code>，并且需要将标签的解析器注册到<code>BeanDefinition</code>的解析器中，这样说起来比较抽象，接下来我们自己定义一个标签就明了了。</p> <h3 id="定义标签属性类">定义标签属性类</h3> <p>创建一个需要解析的标签的属性，比如在<code>Spring</code>配置文件中经常看到的<code>&lt;context:component-scan base-package="com.redwinter.test"/&gt;</code> ，这里的<code>component-scan</code>就是标签属性。</p> <pre><code class="language-java">/**  * @author &lt;a href="https://www.cnblogs.com/redwinter/"&gt;redwinter&lt;/a&gt;  * @since 1.0  **/ public class Redwinter {  	private String username; 	private String email; 	private String password;  	public String getUsername() { 		return username; 	}  	public void setUsername(String username) { 		this.username = username; 	}  	public String getEmail() { 		return email; 	}  	public void setEmail(String email) { 		this.email = email; 	}  	public String getPassword() { 		return password; 	}  	public void setPassword(String password) { 		this.password = password; 	} }</code></pre> <p>定义一个<code>Redwinter</code>类，里面三个属性，当然你可以自己定义你需要的属性，我这里就随便写啦。</p> <h3 id="定义标签属性解析器类">定义标签属性解析器类</h3> <p>定义好标签的属性之后就需要定义一个解析器对这些属性进行解析，定义解析器需要继承<code>AbstractSingleBeanDefinitionParser</code>，这个类是实现了<code>BeanDefinitionParser</code>的类，他下面有很多实现类，一般来说我们的Bean都是单例的，那就继承<code>AbstractSingleBeanDefinitionParser</code>即可。</p> <pre><code class="language-java">/**  * @author &lt;a href="https://www.cnblogs.com/redwinter/"&gt;redwinter&lt;/a&gt;  * @since 1.0  **/ public class RedwinterBeanDefinitionParser extends AbstractSingleBeanDefinitionParser {  	@Override 	protected Class&lt;?&gt; getBeanClass(Element element) { 		return Redwinter.class; 	}  	@Override 	protected void doParse(Element element, BeanDefinitionBuilder builder) { 		/** 		 * 自定义解析xml的自定义字段，并做相应的其他处理 		 */ 		String username = element.getAttribute("username"); 		String email = element.getAttribute("email"); 		String password = element.getAttribute("password"); 		if (StringUtils.hasText(username)){ 			builder.addPropertyValue("username",username); 		} 		if (StringUtils.hasText(email)){ 			builder.addPropertyValue("email",email); 		} 		if (StringUtils.hasText(password)){ 			builder.addPropertyValue("password",password); 		} 	} }</code></pre> <p>这个解析器主要是重写了父类的两个方法，一个是<code>getBeanClass</code>用于返回对应的标签属性类，一个是解析属性<code>doParser</code>，这里我只是从<code>element</code>中获取出来然后进行了下判断在加入到属性值中，当然这里你可以自定义自己的逻辑处理。</p> <h3 id="定义命名空间处理器类">定义命名空间处理器类</h3> <p>定义命名空间处理器需要继承NamespaceHandlerSupport，然后重写他的init方法，将解析器注册进去，这个解析器就是上面定义的用来解析标签属性的解析器。</p> <pre><code class="language-java">/**  * @author &lt;a href="https://www.cnblogs.com/redwinter/"&gt;redwinter&lt;/a&gt;  * @since 1.0  **/ public class RedwinterNameSpaceHandler extends NamespaceHandlerSupport { 	@Override 	public void init() { 		// 这里的属性必须和xsd中指定的属性一致，否则报错 		//org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Cannot locate BeanDefinitionParser for element [dl] 		registerBeanDefinitionParser("dl",new RedwinterBeanDefinitionParser()); 	} }</code></pre> <p><strong>这里需要注意的是</strong>，进行注册时需要指定一个<code>elementName</code>，这个值必须和xml中定义的名称一致，否者的话就会报如下错：</p> <pre><code class="language-java">org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Cannot locate BeanDefinitionParser for element [dl]</code></pre> <p>我这里定义的元素名称叫<strong>dl</strong>。</p> <h3 id="定义xsd文件">定义xsd文件</h3> <p>xsd文件就是spring进行xml解析时解析的标签，当然你可以定义dtd文件，不过现在一般都用xsd文件，我这里命名为redwinter.xsd，完整文件如下：</p> <pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;  &lt;xsd:schema xmlns="http://www.redwinter.com/schema/redwinter" 			xmlns:xsd="http://www.w3.org/2001/XMLSchema" 			targetNamespace="http://www.redwinter.com/schema/redwinter" 			elementFormDefault="qualified" 			attributeFormDefault="unqualified"&gt; 	&lt;xsd:element name="dl"&gt; 		&lt;xsd:complexType&gt; 			&lt;xsd:attribute name="id" type="xsd:string"/&gt; 			&lt;xsd:attribute name="username" type="xsd:string" use="required"/&gt; 			&lt;xsd:attribute name="email" type="xsd:string" use="required"/&gt; 			&lt;xsd:attribute name="password" type="xsd:string" use="required"/&gt; 		&lt;/xsd:complexType&gt; 	&lt;/xsd:element&gt; &lt;/xsd:schema&gt;</code></pre> <p><strong>这里有几个点需要注意：</strong><code>schema</code>标签下有个<code>targetNamespace</code>，这里指定了命名空间叫http://www.redwinter.com/schema/redwinter ，那么在进行<code>spring</code>配置文件的时候引入的<code>namespace</code>就是这个，然后有个<code>name="dl"</code>，这里的这个<code>dl</code>就是处理器中定义的元素名称，而且必须一致，不然解析不到，下面定义的属性就是标签属性类中定义的刷新，这个<code>id</code>是表示唯一的<code>Bean</code>名称。</p> <h3 id="编写springschemas和springhandlers文件">编写spring.schemas和spring.handlers文件</h3> <p>这里直接列出完整文件内容：</p> <ul> <li><code>spring.schemas</code>文件</li> </ul> <pre><code class="language-properties">http\://www.redwinter.com/schema/redwinter.xsd=META-INF/redwinter.xsd</code></pre> <p>这里需要注意的是，这里配置的<code>key</code>也是需要在<code>spring</code>配置文件中引入的，<code>value</code>就是上一步定义的<code>xsd</code>文件所在路径</p> <ul> <li><code>spring.handlers</code>文件</li> </ul> <pre><code class="language-properties">http\://www.redwinter.com/schema/redwinter=com.redwinter.test.RedwinterNameSpaceHandler</code></pre> <p>这里配置的<code>key</code>就是上一步定义的<code>xsd</code>文件中定义的<code>targetNamespace</code>，<code>value</code>就是定义的命名空间处理器。</p> <p>到这里自定义标签和解析就完成了，最后就需要在spring配置文件中引入并配置。</p> <h3 id="验证自定义属性标签">验证自定义属性标签</h3> <p>我这里定义个角<code>spring-test.xml</code>的文件进行配置</p> <pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans" 	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc" 	   xmlns:context="http://www.springframework.org/schema/context" 	   xmlns:redwinter="http://www.redwinter.com/schema/redwinter" 	   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.1.xsd 		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd 		http://www.redwinter.com/schema/redwinter  http://www.redwinter.com/schema/redwinter.xsd 		"&gt; 	&lt;!--自定义标签--&gt; 	&lt;redwinter:dl id ="redwinter" email="abc@qq.com" password="123456" username="冬玲记忆"/&gt; 	&lt;redwinter:dl id ="redwinter123456"  email="123456-abc@qq.com" password="123456" username="冬玲记忆"/&gt;  &lt;/beans&gt;</code></pre> <p>验证是否配置正确：</p> <pre><code class="language-java">public class BeanCreate {  	@Test 	public void classPathXml() { //		ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("classpath:spring-test.xml"); 		ClassPathXmlApplicationContext context = new MyClassPathXmlApplicationContext("classpath:spring-test.xml");        		Redwinter redwinter = (Redwinter) context.getBean("redwinter"); 		System.out.println(redwinter.getEmail());  		Redwinter redwinter123456 = (Redwinter) context.getBean("redwinter123456"); 		System.out.println(redwinter123456.getEmail()); 	} }</code></pre> <p>输出：</p> <pre><code class="language-java">abc@qq.com 123456-abc@qq.com</code></pre> <p>那说明自定义标签生效了，并且成功解析出来。</p> <p>接下来就是继续介绍<code>Spring</code> 容器的实现<code>AbstractApplicationContex#refresh</code>的第三个方法，这个方法其实就是<code>BeanFactory</code>使用的前戏准备，而第一个方法是<code>BeanFactory</code>刷新的前戏准备。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-81918.htm">省内寄猫咪一般多少钱（省内邮寄猫咪多少钱）</a></p>
                                        <p>下一个：<a href="/news/article-82638.htm">东门宠物用品批发市场营业时间（东门卖宠物的地址）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-80534.htm" title="猫三联加狂犬疫苗要打多久（猫三联 狂犬疫苗）">猫三联加狂犬疫苗要打多久（猫三联 狂犬疫苗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-22-free-node-subscribe.htm" title="VPN For Netflix | 2月22日20.5M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点链接地址">VPN For Netflix | 2月22日20.5M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-83352.htm" title="让猫挠了出血过了24小时有事吗会感染吗会传染吗（被猫挠出血了过24小时了）">让猫挠了出血过了24小时有事吗会感染吗会传染吗（被猫挠出血了过24小时了）</a></li>
                        <li class="py-2"><a href="/news/article-79858.htm" title="@RequestBody总结相关">@RequestBody总结相关</a></li>
                        <li class="py-2"><a href="/news/article-53916.htm" title="python中time.strftime不支持中文，报错UnicodeEncodeError: &#8216;locale&#8217; codec can&#8217;t encode character &#8216;\u5e74&#8217; in po&#8230;">python中time.strftime不支持中文，报错UnicodeEncodeError: &#8216;locale&#8217; codec can&#8217;t encode character &#8216;\u5e74&#8217; in po&#8230;</a></li>
                        <li class="py-2"><a href="/news/article-56519.htm" title="宠物免费赠送（宠物免费赠送平台）">宠物免费赠送（宠物免费赠送平台）</a></li>
                        <li class="py-2"><a href="/news/article-55971.htm" title="宠物医院开办批准手续（宠物医院开办批准手续需要多久）">宠物医院开办批准手续（宠物医院开办批准手续需要多久）</a></li>
                        <li class="py-2"><a href="/news/article-62867.htm" title="做宠物繁殖赚钱吗（一万元能搞什么养殖）">做宠物繁殖赚钱吗（一万元能搞什么养殖）</a></li>
                        <li class="py-2"><a href="/news/article-75082.htm" title="numpy库的安装与导入，列表、数组、矩阵的互相转换以及差异">numpy库的安装与导入，列表、数组、矩阵的互相转换以及差异</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-node-share.htm" title="VPN For Netflix | 3月22日18.8M/S|免费VPN/Clash/Shadowrocket/V2ray/SSR免费节点链接地址">VPN For Netflix | 3月22日18.8M/S|免费VPN/Clash/Shadowrocket/V2ray/SSR免费节点链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End Portfolio -->
        <!-- Start Footer -->
    <footer class="text-center bg-dark text-light">
        <div class="container">
            <div class="row">
                <div class="col-md-8 copyright text-left">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">VPN For Netflix 订阅链接节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-md-4 utf-footer-social text-right">
                    <ul>
                        <li class="facebook"><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li class="linkedin"><a href="#"><i class="fab fa-linkedin"></i></a></li>
                        <li class="twitter"><a href="#"><i class="fab fa-twitter"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery Style -->
    <script src="/assets/website/js/frontend/clashxpro/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/equal-height.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/modernizr.custom.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/count-to.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootsnav.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/typed.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/YTPlayer.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/custom_script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>