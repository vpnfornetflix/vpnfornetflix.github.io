<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnfornetflix.github.io/news/article-109016.htm" />
    <meta name="theme-color" content="#c70039">
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>java springMVC之@RequestMapping注解</title>
        <meta name="description" content="目录 @RequestMapping注解 注解标识位置 value属性 method属性 params属性 headers属性 ant风格路径 路径占位符   @RequestMapping注解的作用" />
        <link rel="icon" href="/assets/website/img/clashxpro/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN For Netflix 订阅链接节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnfornetflix.github.io/news/article-109016.htm" />
    <meta property="og:site_name" content="VPN For Netflix 订阅链接节点官网" />
    <meta property="og:title" content="java springMVC之@RequestMapping注解" />
    <meta property="og:image" content="https://vpnfornetflix.github.io/uploads/20241107-1/692d552febec016a5fc0f2c8a5c7d0f5.webp" />
        <meta property="og:release_date" content="2025-05-01T09:03:55" />
    <meta property="og:updated_time" content="2025-05-01T09:03:55" />
        <meta property="og:description" content="目录 @RequestMapping注解 注解标识位置 value属性 method属性 params属性 headers属性 ant风格路径 路径占位符   @RequestMapping注解的作用" />
        
    <!-- Start Stylesheet -->
    <link href="/assets/website/css/clashxpro/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/bootsnav.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/style.css" rel="stylesheet">
    <link href="/assets/website/css/clashxpro/responsive.css" rel="stylesheet" />
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    
    <!-- Google Web Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="java springMVC之@RequestMapping注解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FE8EJMMK0B"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FE8EJMMK0B');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Header -->
    <header id="home">
        <!-- Start Navigation -->
        <nav class="navbar navbar-default navbar-fixed white no-background bootsnav">
            <div class="container">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu"> <i class="fa fa-bars"></i> </button>
                    <a class="navbar-brand" href="/">
                                                <span>VPN For Netflix</span>
                                            </a>
                </div>
                <!-- End Header Navigation -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="#" data-out="#">
                                                <li><a href="/">首页</a></li>
                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                <li><a href="/news/">新闻资讯</a></li>
                                                <li><a href="/client.htm">客户端</a></li>
                                            </ul>
                </div>
                <!-- /.navbar-collapse -->
            </div>
        </nav>
        <!-- End Navigation -->
    </header>
    <!-- End Header -->
    <!-- Start Page Heading -->
    <div class="utf-page-heading shadow dark bg-fixed text-light" style="background-image: url(assets/img/banner/breadcrum.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>java springMVC之@RequestMapping注解</h1>
                    <div class="utf-breadcrumb-items">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Heading -->
    <!-- Start Portfolio -->
    <div id="portfolio" class="utf-portfolio-area-item default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="main-toc-toc" style="margin-left:0px;">@RequestMapping注解</p> <p id="%E6%B3%A8%E8%A7%A3%E6%A0%87%E8%AF%86%E4%BD%8D%E7%BD%AE-toc" style="margin-left:40px;">注解标识位置</p> <p id="value%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;">value属性</p> <p id="method%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;">method属性</p> <p id="params%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;">params属性</p> <p id="headers%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;">headers属性</p> <p id="springMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E8%B7%AF%E5%BE%84-toc" style="margin-left:40px;">ant风格路径</p> <p id="%E8%B7%AF%E5%BE%84%E5%8D%A0%E4%BD%8D%E7%AC%A6-toc" style="margin-left:40px;">路径占位符</p> <hr id="hr-toc"/> </h1> <p><strong>@RequestMapping注解的作用就是将请求和处理请求的控制器方法关联起来，建立映射关系。 SpringMVC接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</strong></p> <h2 id="%E6%B3%A8%E8%A7%A3%E6%A0%87%E8%AF%86%E4%BD%8D%E7%BD%AE"><strong>注解标识位置</strong></h2> <p><strong>（1）</strong>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息。</p> <p><strong>（2）</strong>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息。</p> <p><strong>标识在方法上时</strong></p> <pre><code>@Controller //@RequestMapping(value = "/web") public class RequestMappingController {      @RequestMapping(value = "/testRequestMapping")     public String testRequestMapping() {         //返回的字符串是去掉视图前缀和后缀的文件名         //比如说在某一路径下的test.html文件，只需要返回test即可跳转到该页面         //在springMVC.xml配置文件中设置视图前后缀         return "test";     }  }</code></pre> <p>跳转路径设置如下（这里我们使用了thymeleaf来管理路径）</p> <pre><code>&lt;a th:href="@{/testRequestMapping}"&gt;测试RequestMapping注解&lt;/a&gt;&lt;br&gt;</code></pre> <p>跳转结果</p> <p><img fetchpriority="high" decoding="async" alt="" height="123" src="http://img.555519.xyz/uploads3/20220901/9186ce7e0704ce3063af67103ad5486b.jpg"></p> <p>可以看到地址栏和我们设置的value属性一样。</p> <p><strong>&nbsp;标识在类上时</strong></p> <p>如果我们在类上设置一个RequestMapping，及取消上面代码中RequestMapping的注释，那么跳转的地址更改如下</p> <pre><code>&lt;a th:href="@{/web/testRequestMapping}"&gt;测试RequestMapping注解&lt;/a&gt;&lt;br&gt;</code></pre> <p><strong>在类上标记了之后，相当于这一个类中所有的路径前面都加上了类上所标记的路径。</strong></p> <h2 id="value%E5%B1%9E%E6%80%A7">value属性</h2> <p><strong>value属性通过请求的请求地址匹配请求映射</strong>，value属性可以是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址所对应的请求。</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"})     public String test() {         return "test";     }</code></pre> <p><strong>value的值为多个时，表示从这几个路径都可以访问到这一个页面。</strong></p> <h2 id="method%E5%B1%9E%E6%80%A7"><strong>method属性</strong></h2> <p><strong>method属性通过请求的请求方式（get或post）匹配请求映射</strong>，表示该请求能匹配的请求方式，如果不设置method属性，就表示不以请求方式为访问的限制条件。当满足value属性设置的路径但不满足method设置的请求方式时就会报错。</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"},         method = {RequestMethod.GET, RequestMethod.POST} ) public String test() {     return "test"; }</code></pre> <h2 id="params%E5%B1%9E%E6%80%A7">params属性</h2> <p><strong>params属性通过请求参数匹配请求映射</strong>，@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数。</p> <p>（1）"param"：要求请求映射所匹配的请求必须携带param请求参数。</p> <p>（2）"!param"：要求请求映射所匹配的请求必须不能携带param请求参数。</p> <p>（3）"param=value"：要求请求映射所匹配的请求必须携带param请求参数且param=value。</p> <p>（4）"param!=value"：要求请求映射所匹配的请求必须携带param请求参数但是param!=value。</p> <p>例如我们在访问路径上面设置传递过去的访问参数</p> <pre><code>&lt;a th:href="@{/web/testRequestMapping(username='HLJ',password='654321')}"&gt;测试RequestMapping注解false&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/web/testRequestMapping(username='JLH',password='123456')}"&gt;测试RequestMapping注解true&lt;/a&gt;&lt;br&gt;</code></pre> <p>接收方法如下</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"},         method = {RequestMethod.GET, RequestMethod.POST},         params = {"username=JLH","password!=654321"} ) public String test() {     return "test"; }</code></pre> <p><strong>这样就表示当username和password都满足条件的时候才会跳转成功。</strong></p> <h2 id="headers%E5%B1%9E%E6%80%A7">headers属性</h2> <p><strong>headers属性通过请求的请求头信息匹配请求映射，</strong>@RequestMapping注解的headers属性是一个字符串类型的数组，可以通过四种表达式设置请求头信息和请求映射的匹配关系。</p> <p>"header"：要求请求映射所匹配的请求必须携带header请求头信息。</p> <p>"!header"：要求请求映射所匹配的请求必须不能携带header请求头信息。</p> <p>"header=value"：要求请求映射所匹配的请求必须携带header请求头信息且header=value。</p> <p>"header!=value"：要求请求映射所匹配的请求必须携带header请求头信息且header!=value。</p> <p>访问地址</p> <pre><code>&lt;a th:href="@{/testParamsAndHeaders}"&gt;测试headers&lt;/a&gt;&lt;br&gt;</code></pre> <p>接收设置</p> <pre><code>@RequestMapping(value = "/testParamsAndHeaders",             headers = {"Host=localhost:8080","Accept-Language=zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"})     public String testParamsAndHeaders() {         return "test";     }</code></pre> <p>&nbsp;通过查看网页的请求标头可以发现如下信息</p> <p><img decoding="async" alt="" height="164" src="http://img.555519.xyz/uploads3/20220901/6d7ec4245749146ac36f787faa64e3b8.jpg"></p> <p><strong>&nbsp;这里我们通过Host和Accept-Language来设置headers属性进行测试，只要标头的信息和headers中的匹配，就能够访问成功。</strong></p> <h2 id="springMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E8%B7%AF%E5%BE%84"><strong>ant风格路径</strong></h2> <p>？：表示任意的单个字符。</p> <p>*：表示任意的0个或多个字符。</p> <p>**：表示任意的一层或多层目录，<strong>在使用**时，只能使用/**/xxx的方式</strong>。</p> <p id="%E6%8E%A5%E6%94%B6%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE">接收路径设置</p> <pre><code>@RequestMapping(value = "/a?a/testAnt") public String testAnt1() {     return "test"; }  @RequestMapping(value = "/a*a/testAnt") public String testAnt2() {     return "test"; }  @RequestMapping(value = "/**/testAnt") public String testAnt3() {     return "test"; }</code></pre> <p>访问路径设置</p> <pre><code>&lt;a th:href="@{/a1a/testAnt}"&gt;使用?(一个问号匹配单个字符)&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/a1123123123a/testAnt}"&gt;使用*(开头和结尾的字符匹配即可)&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/tqwe/testAnt}"&gt;使用**(多目录都可以，只要最后是testAnt)&lt;/a&gt;&lt;br&gt;</code></pre> <p>因为springMVC支持ant风格的路径，所以上面的路径都能被接收到。</p> <h2 id="%E8%B7%AF%E5%BE%84%E5%8D%A0%E4%BD%8D%E7%AC%A6">路径占位符</h2> <p>当我们要把某些数据通过路径的方式传输到服务器时，原始的方式是/路径?username=123&amp;password=321，而现在可以改写成：/路径/username=123/password=321，并且可以通过在RequestMapping注解的value属性中设置占位符获取传输的数据，通过@PathVariable赋值给形参。</p> <p>访问路径设置</p> <pre><code>&lt;a th:href="@{/testPath/JLH/123456}"&gt;测试占位符&lt;/a&gt;&lt;br&gt;</code></pre> <p>设置占位符</p> <pre><code>@RequestMapping(value = "/testPath/{username}/{password}") public String testPath(@PathVariable("id") Integer id, @PathVariable("username") String username) {     System.out.println("id:" + id);     System.out.println("username:" + username);     return "test"; }</code></pre> <p>这样就可以很容易的获取到通过路径传递过来的参数。</p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-108196.htm">猫三联到底是两针还是三针啊图片（猫三联每针的作用）</a></p>
                                        <p>下一个：<a href="/news/article-109019.htm">宠物领养网站的设计与实现策略（宠物领养在哪个网站发布比较好）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-105551.htm" title="公务员2021国考报名时间 公务员2021国考报名时间表">公务员2021国考报名时间 公务员2021国考报名时间表</a></li>
                        <li class="py-2"><a href="/news/article-88376.htm" title="想开宠物店怎么入行赚钱快（想开宠物店怎么找货源）">想开宠物店怎么入行赚钱快（想开宠物店怎么找货源）</a></li>
                        <li class="py-2"><a href="/news/article-87642.htm" title="flex布局之5个div盒子一排，不同屏幕，盒子宽度自适应">flex布局之5个div盒子一排，不同屏幕，盒子宽度自适应</a></li>
                        <li class="py-2"><a href="/news/article-107390.htm" title="兽药疫苗冷藏室温度（兽用疫苗冷藏温度）">兽药疫苗冷藏室温度（兽用疫苗冷藏温度）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-22-free-node-subscribe.htm" title="VPN For Netflix | 4月22日21M/S|免费VPN/Clash/V2ray/SSR/Shadowrocket免费节点链接地址">VPN For Netflix | 4月22日21M/S|免费VPN/Clash/V2ray/SSR/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-95793.htm" title="狗粮生产机器设备厂家（狗粮生产机器设备厂家电话）">狗粮生产机器设备厂家（狗粮生产机器设备厂家电话）</a></li>
                        <li class="py-2"><a href="/news/article-86921.htm" title="非专业怎么考兽医资格证（非专业如何考兽医）">非专业怎么考兽医资格证（非专业如何考兽医）</a></li>
                        <li class="py-2"><a href="/news/article-97991.htm" title="上海各区正规宠物医院地址（上海有名宠物医院）">上海各区正规宠物医院地址（上海有名宠物医院）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-3-node-share-links.htm" title="VPN For Netflix | 4月3日19M/S|免费VPN/V2ray/Clash/Shadowrocket/SSR免费节点链接地址">VPN For Netflix | 4月3日19M/S|免费VPN/V2ray/Clash/Shadowrocket/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-93533.htm" title="免费领养宠物犬（免费领养宠物犬犯法吗）">免费领养宠物犬（免费领养宠物犬犯法吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End Portfolio -->
        <!-- Start Footer -->
    <footer class="text-center bg-dark text-light">
        <div class="container">
            <div class="row">
                <div class="col-md-8 copyright text-left">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">VPN For Netflix 订阅链接节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-md-4 utf-footer-social text-right">
                    <ul>
                        <li class="facebook"><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li class="linkedin"><a href="#"><i class="fab fa-linkedin"></i></a></li>
                        <li class="twitter"><a href="#"><i class="fab fa-twitter"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery Style -->
    <script src="/assets/website/js/frontend/clashxpro/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/equal-height.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/modernizr.custom.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/count-to.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootsnav.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/typed.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/YTPlayer.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/custom_script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>