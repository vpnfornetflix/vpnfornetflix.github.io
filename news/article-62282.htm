<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnfornetflix.github.io/news/article-62282.htm" />
    <meta name="theme-color" content="#c70039">
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</title>
        <meta name="description" content="题目链接：https://www.dotcpp.com/oj/problem1707.html 常规问题常规做法，用bfs拓扑思想即可。 但这个题有一个坑点是用队列反而不行了，要用到dfs拓扑思想的队" />
        <link rel="icon" href="/assets/website/img/clashxpro/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN For Netflix 订阅链接节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnfornetflix.github.io/news/article-62282.htm" />
    <meta property="og:site_name" content="VPN For Netflix 订阅链接节点官网" />
    <meta property="og:title" content="数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具" />
    <meta property="og:image" content="https://vpnfornetflix.github.io/uploads/20241107-1/eba8312c7e47e1dbb298f7d314050d03.webp" />
        <meta property="og:release_date" content="2025-02-24T09:17:04" />
    <meta property="og:updated_time" content="2025-02-24T09:17:04" />
        <meta property="og:description" content="题目链接：https://www.dotcpp.com/oj/problem1707.html 常规问题常规做法，用bfs拓扑思想即可。 但这个题有一个坑点是用队列反而不行了，要用到dfs拓扑思想的队" />
        
    <!-- Start Stylesheet -->
    <link href="/assets/website/css/clashxpro/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/bootsnav.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/style.css" rel="stylesheet">
    <link href="/assets/website/css/clashxpro/responsive.css" rel="stylesheet" />
    <!-- Google Web Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FE8EJMMK0B"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FE8EJMMK0B');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Header -->
    <header id="home">
        <!-- Start Navigation -->
        <nav class="navbar navbar-default navbar-fixed white no-background bootsnav">
            <div class="container">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu"> <i class="fa fa-bars"></i> </button>
                    <a class="navbar-brand" href="/">
                                                <span>VPN For Netflix</span>
                                            </a>
                </div>
                <!-- End Header Navigation -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="#" data-out="#">
                                                <li><a href="/">首页</a></li>
                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                <li><a href="/news/">新闻资讯</a></li>
                                                <li><a href="/client.htm">客户端</a></li>
                                            </ul>
                </div>
                <!-- /.navbar-collapse -->
            </div>
        </nav>
        <!-- End Navigation -->
    </header>
    <!-- End Header -->
    <!-- Start Page Heading -->
    <div class="utf-page-heading shadow dark bg-fixed text-light" style="background-image: url(assets/img/banner/breadcrum.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</h1>
                    <div class="utf-breadcrumb-items">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Heading -->
    <!-- Start Portfolio -->
    <div id="portfolio" class="utf-portfolio-area-item default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<p>题目链接：https://www.dotcpp.com/oj/problem1707.html</p> <p>常规问题常规做法，用bfs拓扑思想即可。</p> <p>但这个题有一个坑点是用队列反而不行了，要用到dfs拓扑思想的队列。</p> <p>也就是说这个题是dfs+bfs双拓扑思想。</p> <p>当然，我发现大多数算法思想是依据bfs拓扑思想的，所以说算法实现起来不算太难。</p> <p>今晚我会根据情况总结一下拓扑排序的简单算法，当然，</p> <p>拓扑排序的重要应用---关键路径算法我还没完全掌握，所以会根据情况做一下拓扑排序的小结；</p> <p>回到本题，这个题还要一个小技巧，</p> <p>就是存图的时候依然是用邻接表存的，虽然题目貌似是要求用邻接矩阵存图。</p> <p>但是用邻接表存图也是可以的，只要在循环中定义一个临时变量，每次输入这个临时变量并且判断，</p> <p>如果满足条件就按照拓扑排序的算法进行入度操作；</p> <p>然后进行常规的拓扑排序算法实现就可以了。</p> <h2>Talk is cheap. Show me the code.</h2> <p>队列代码（仅供参考，当然正规是这样写的，这个题有坑点不会过）</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> #include&lt;bits/stdc++.h&gt; <span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 255, 1)">using</span> <span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> std; </span><span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 0, 255, 1)">const</span> <span style="color: rgba(0, 0, 255, 1)">int</span> num=<span style="color: rgba(128, 0, 128, 1)">30010</span><span style="color: rgba(0, 0, 0, 1)">;  </span><span style="color: rgba(0, 128, 128, 1)"> 4</span> queue&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;<span style="color: rgba(0, 0, 0, 1)">q; </span><span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> n; </span><span style="color: rgba(0, 128, 128, 1)"> 6</span> vector&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;<span style="color: rgba(0, 0, 0, 1)">edge[num]; </span><span style="color: rgba(0, 128, 128, 1)"> 7</span> vector&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;<span style="color: rgba(0, 0, 0, 1)">topo; </span><span style="color: rgba(0, 128, 128, 1)"> 8</span> <span style="color: rgba(0, 0, 255, 1)">int</span> <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)">[num]; </span><span style="color: rgba(0, 128, 128, 1)"> 9</span> <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> main() </span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">{ </span><span style="color: rgba(0, 128, 128, 1)">11</span>     std::ios::sync_with_stdio(<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">); </span><span style="color: rgba(0, 128, 128, 1)">12</span>     cin&gt;&gt;<span style="color: rgba(0, 0, 0, 1)">n; </span><span style="color: rgba(0, 128, 128, 1)">13</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;n;i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">14</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">15</span>         <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> j=<span style="color: rgba(128, 0, 128, 1)">0</span>;j&lt;n;j++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">16</span> <span style="color: rgba(0, 0, 0, 1)">        { </span><span style="color: rgba(0, 128, 128, 1)">17</span>             <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> temp; </span><span style="color: rgba(0, 128, 128, 1)">18</span>             cin&gt;&gt;<span style="color: rgba(0, 0, 0, 1)">temp; </span><span style="color: rgba(0, 128, 128, 1)">19</span>             <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)">(temp) </span><span style="color: rgba(0, 128, 128, 1)">20</span> <span style="color: rgba(0, 0, 0, 1)">            { </span><span style="color: rgba(0, 128, 128, 1)">21</span> <span style="color: rgba(0, 0, 0, 1)">                edge[i].push_back(j); </span><span style="color: rgba(0, 128, 128, 1)">22</span>                 <span style="color: rgba(0, 0, 255, 1)">in</span>[j]++<span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">23</span> <span style="color: rgba(0, 0, 0, 1)">            } </span><span style="color: rgba(0, 128, 128, 1)">24</span> <span style="color: rgba(0, 0, 0, 1)">        } </span><span style="color: rgba(0, 128, 128, 1)">25</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">26</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;n;i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">27</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">28</span>         <span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)">[i]) </span><span style="color: rgba(0, 128, 128, 1)">29</span> <span style="color: rgba(0, 0, 0, 1)">        q.push(i); </span><span style="color: rgba(0, 128, 128, 1)">30</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">31</span>     <span style="color: rgba(0, 0, 255, 1)">while</span>(!<span style="color: rgba(0, 0, 0, 1)">q.empty()) </span><span style="color: rgba(0, 128, 128, 1)">32</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">33</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">int x=q.top();</span> <span style="color: rgba(0, 128, 128, 1)">34</span>         <span style="color: rgba(0, 0, 255, 1)">int</span> x=<span style="color: rgba(0, 0, 0, 1)">q.front(); </span><span style="color: rgba(0, 128, 128, 1)">35</span> <span style="color: rgba(0, 0, 0, 1)">        q.pop(); </span><span style="color: rgba(0, 128, 128, 1)">36</span> <span style="color: rgba(0, 0, 0, 1)">        topo.push_back(x); </span><span style="color: rgba(0, 128, 128, 1)">37</span>         <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> j=<span style="color: rgba(128, 0, 128, 1)">0</span>;j&lt;edge[x].size();j++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">38</span> <span style="color: rgba(0, 0, 0, 1)">        { </span><span style="color: rgba(0, 128, 128, 1)">39</span>             <span style="color: rgba(0, 0, 255, 1)">int</span> y=<span style="color: rgba(0, 0, 0, 1)">edge[x][j]; </span><span style="color: rgba(0, 128, 128, 1)">40</span>             <span style="color: rgba(0, 0, 255, 1)">in</span>[y]--<span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">41</span>             <span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)">[y]) </span><span style="color: rgba(0, 128, 128, 1)">42</span> <span style="color: rgba(0, 0, 0, 1)">            q.push(y);  </span><span style="color: rgba(0, 128, 128, 1)">43</span> <span style="color: rgba(0, 0, 0, 1)">        } </span><span style="color: rgba(0, 128, 128, 1)">44</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">45</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;topo.size();i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">46</span>     cout&lt;&lt;topo[i]&lt;&lt;<span style="color: rgba(128, 0, 0, 1)">"</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">47</span>     <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">48</span> }</pre> </div> <p>AC代码</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> #include&lt;bits/stdc++.h&gt; <span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 255, 1)">using</span> <span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> std; </span><span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 0, 255, 1)">const</span> <span style="color: rgba(0, 0, 255, 1)">int</span> num=<span style="color: rgba(128, 0, 128, 1)">30010</span><span style="color: rgba(0, 0, 0, 1)">;  </span><span style="color: rgba(0, 128, 128, 1)"> 4</span> stack&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;q;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">坑点是栈</span> <span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> n; </span><span style="color: rgba(0, 128, 128, 1)"> 6</span> vector&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;edge[num];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">邻接表</span> <span style="color: rgba(0, 128, 128, 1)"> 7</span> vector&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;topo;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">拓扑序列</span> <span style="color: rgba(0, 128, 128, 1)"> 8</span> <span style="color: rgba(0, 0, 255, 1)">int</span> <span style="color: rgba(0, 0, 255, 1)">in</span>[num];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">入度数组</span> <span style="color: rgba(0, 128, 128, 1)"> 9</span> <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> main() </span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">{ </span><span style="color: rgba(0, 128, 128, 1)">11</span>     std::ios::sync_with_stdio(<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">); </span><span style="color: rgba(0, 128, 128, 1)">12</span>     cin&gt;&gt;<span style="color: rgba(0, 0, 0, 1)">n; </span><span style="color: rgba(0, 128, 128, 1)">13</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;n;i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">14</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">15</span>         <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> j=<span style="color: rgba(128, 0, 128, 1)">0</span>;j&lt;n;j++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">16</span> <span style="color: rgba(0, 0, 0, 1)">        { </span><span style="color: rgba(0, 128, 128, 1)">17</span>             <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> temp; </span><span style="color: rgba(0, 128, 128, 1)">18</span>             cin&gt;&gt;temp;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">写入临时变量</span> <span style="color: rgba(0, 128, 128, 1)">19</span>             <span style="color: rgba(0, 0, 255, 1)">if</span>(temp)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">非0</span> <span style="color: rgba(0, 128, 128, 1)">20</span> <span style="color: rgba(0, 0, 0, 1)">            { </span><span style="color: rgba(0, 128, 128, 1)">21</span>                 edge[i].push_back(j);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">存图</span> <span style="color: rgba(0, 128, 128, 1)">22</span>                 <span style="color: rgba(0, 0, 255, 1)">in</span>[j]++;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">入度</span> <span style="color: rgba(0, 128, 128, 1)">23</span> <span style="color: rgba(0, 0, 0, 1)">            } </span><span style="color: rgba(0, 128, 128, 1)">24</span> <span style="color: rgba(0, 0, 0, 1)">        } </span><span style="color: rgba(0, 128, 128, 1)">25</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">26</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;n;i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">27</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">28</span>         <span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)">[i]) </span><span style="color: rgba(0, 128, 128, 1)">29</span>         q.push(i);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">将度为0的节点入队（栈）</span> <span style="color: rgba(0, 128, 128, 1)">30</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">31</span>     <span style="color: rgba(0, 0, 255, 1)">while</span>(!<span style="color: rgba(0, 0, 0, 1)">q.empty()) </span><span style="color: rgba(0, 128, 128, 1)">32</span> <span style="color: rgba(0, 0, 0, 1)">    { </span><span style="color: rgba(0, 128, 128, 1)">33</span>         <span style="color: rgba(0, 0, 255, 1)">int</span> x=q.top();<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">队（栈）首元素</span> <span style="color: rgba(0, 128, 128, 1)">34</span> <span style="color: rgba(0, 0, 0, 1)">        q.pop(); </span><span style="color: rgba(0, 128, 128, 1)">35</span>         topo.push_back(x);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">读入拓扑序列</span> <span style="color: rgba(0, 128, 128, 1)">36</span>         <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> j=<span style="color: rgba(128, 0, 128, 1)">0</span>;j&lt;edge[x].size();j++)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">检查邻居</span> <span style="color: rgba(0, 128, 128, 1)">37</span> <span style="color: rgba(0, 0, 0, 1)">        { </span><span style="color: rgba(0, 128, 128, 1)">38</span>             <span style="color: rgba(0, 0, 255, 1)">int</span> y=<span style="color: rgba(0, 0, 0, 1)">edge[x][j]; </span><span style="color: rgba(0, 128, 128, 1)">39</span>             <span style="color: rgba(0, 0, 255, 1)">in</span>[y]--;<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)">邻居的度减一</span> <span style="color: rgba(0, 128, 128, 1)">40</span>             <span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 255, 1)">in</span>[y])<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">度为0入队（栈）</span> <span style="color: rgba(0, 128, 128, 1)">41</span> <span style="color: rgba(0, 0, 0, 1)">            q.push(y);  </span><span style="color: rgba(0, 128, 128, 1)">42</span> <span style="color: rgba(0, 0, 0, 1)">        } </span><span style="color: rgba(0, 128, 128, 1)">43</span> <span style="color: rgba(0, 0, 0, 1)">    } </span><span style="color: rgba(0, 128, 128, 1)">44</span>     <span style="color: rgba(0, 0, 255, 1)">for</span>(register <span style="color: rgba(0, 0, 255, 1)">int</span> i=<span style="color: rgba(128, 0, 128, 1)">0</span>;i&lt;topo.size();i++<span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 128, 1)">45</span>     cout&lt;&lt;topo[i]&lt;&lt;<span style="color: rgba(128, 0, 0, 1)">"</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">46</span>     <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">; </span><span style="color: rgba(0, 128, 128, 1)">47</span> }</pre> </div> <p> </p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-61676.htm">南京领养猫咪贴吧（南京领养宠物的平台）</a></p>
                                        <p>下一个：<a href="/news/article-62283.htm">深圳宝安区领养宠物 深圳宝安区领养宠物的地方</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-23-free-node-subscribe-links.htm" title="VPN For Netflix | 2月23日18.5M/S|免费VPN/V2ray/Clash/Shadowrocket/SSR免费节点链接地址">VPN For Netflix | 2月23日18.5M/S|免费VPN/V2ray/Clash/Shadowrocket/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-60508.htm" title="宠物美容师要培训多久（宠物美容师宠物美容培训费用）">宠物美容师要培训多久（宠物美容师宠物美容培训费用）</a></li>
                        <li class="py-2"><a href="/news/article-55415.htm" title="给动物注射疫苗属于什么行为类型（给动物打疫苗属于什么）">给动物注射疫苗属于什么行为类型（给动物打疫苗属于什么）</a></li>
                        <li class="py-2"><a href="/news/article-62283.htm" title="深圳宝安区领养宠物 深圳宝安区领养宠物的地方">深圳宝安区领养宠物 深圳宝安区领养宠物的地方</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-16-node-share-links.htm" title="VPN For Netflix | 2月16日19M/S|免费VPN/Shadowrocket/V2ray/SSR/Clash免费节点链接地址">VPN For Netflix | 2月16日19M/S|免费VPN/Shadowrocket/V2ray/SSR/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-10-clash-v2ray-ss-ssr.htm" title="VPN机场 | 2月10日19.6M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点链接地址">VPN机场 | 2月10日19.6M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-9-free-node-subscribe.htm" title="VPN机场 | 2月9日18.2M/S|免费VPN/Clash/SSR/Shadowrocket/V2ray免费节点链接地址">VPN机场 | 2月9日18.2M/S|免费VPN/Clash/SSR/Shadowrocket/V2ray免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-55970.htm" title="成都宠物托运公司（成都宠物托运公司推荐）">成都宠物托运公司（成都宠物托运公司推荐）</a></li>
                        <li class="py-2"><a href="/news/article-59932.htm" title="动物医院需要几个执业兽医师证吗 动物医院需要几个执业兽医师证吗知乎">动物医院需要几个执业兽医师证吗 动物医院需要几个执业兽医师证吗知乎</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-21-free-subscribe-node.htm" title="VPN For Netflix | 2月21日20.8M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点链接地址">VPN For Netflix | 2月21日20.8M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End Portfolio -->
        <!-- Start Footer -->
    <footer class="text-center bg-dark text-light">
        <div class="container">
            <div class="row">
                <div class="col-md-8 copyright text-left">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">VPN For Netflix 订阅链接节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-md-4 utf-footer-social text-right">
                    <ul>
                        <li class="facebook"><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li class="linkedin"><a href="#"><i class="fab fa-linkedin"></i></a></li>
                        <li class="twitter"><a href="#"><i class="fab fa-twitter"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery Style -->
    <script src="/assets/website/js/frontend/clashxpro/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/equal-height.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/modernizr.custom.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/count-to.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootsnav.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/typed.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/YTPlayer.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/custom_script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>